# UGTF CI/CD Pipeline for Django on Google Cloud Run
name: Django CI/CD to Cloud Run

on:
  push:
    # Trigger deployment whenever code is pushed (merged) to the the main branch
    branches: ["main"]

# Define key variables for the pipeline
env:
  # ðŸš¨ REPLACE WITH YOUR PROJECT ID (e.g., ugtf-production-2025)
  PROJECT_ID: **[YOUR_GCP_PROJECT_ID]**
  # ðŸš¨ REPLACE WITH YOUR CLOUD RUN REGION (e.g., us-central1)
  GKE_REGION: **[YOUR_CLOUD_RUN_REGION]**
  # ðŸš¨ REPLACE WITH YOUR CLOUD RUN SERVICE NAME (e.g., menaskey-web-app)
  SERVICE_NAME: **[YOUR_CLOUD_RUN_SERVICE_NAME]**

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Authenticate to Google Cloud
      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          # Uses the secret created in the Prerequisites step
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Setup Docker & Artifact Registry
      - name: Set up Docker and Auth
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      # 4. Build and Push Container Image
      - name: Build and Push Docker Image
        run: |
          # Define image path
          IMAGE_TAG="${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

          # Build the image using the Dockerfile (Chuks/Ono have confirmed this exists)
          docker build -t $IMAGE_TAG .

          # Push the final image to Google Artifact Registry
          docker push $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 5. Deploy to Google Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.GKE_REGION }}
          image: ${{ env.IMAGE_TAG }}
          wait: true